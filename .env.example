# ==============================================
# n8n Docker Compose Environment Configuration
# ==============================================
# Copy this file to .env and update the values

# Database Configuration
POSTGRES_PASSWORD=your_secure_postgres_password_here

# Redis Configuration
REDIS_PASSWORD=your_secure_redis_password_here

# n8n Security Configuration
N8N_ENCRYPTION_KEY=your-very-secure-encryption-key-minimum-32-characters-long
N8N_JWT_SECRET=your-jwt-secret-key-minimum-32-characters-long

# Basic Authentication (Optional)
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=your_secure_admin_password

# Application Configuration
N8N_HOST=localhost
N8N_PORT=5678
N8N_PROTOCOL=https
WEBHOOK_URL=https://localhost:5678
N8N_EDITOR_BASE_URL=https://localhost:5678

# Logging Configuration
N8N_LOG_LEVEL=info
N8N_LOG_OUTPUT=console,file

# Performance Configuration
EXECUTIONS_PROCESS=main
EXECUTIONS_TIMEOUT=3600
EXECUTIONS_TIMEOUT_MAX=7200

# Timezone Configuration
GENERIC_TIMEZONE=Asia/Makassar

# User Management
N8N_USER_MANAGEMENT_DISABLED=false
N8N_PUBLIC_API_DISABLED=false

# Metrics
N8N_METRICS=false

# Workflow Configuration
WORKFLOWS_DEFAULT_NAME=My Workflow

# Node.js Configuration
NODE_ENV=production
NODE_FUNCTION_ALLOW_BUILTIN=*
NODE_FUNCTION_ALLOW_EXTERNAL=*

# Worker Configuration
N8N_WORKER_REPLICAS=2

# ==============================================
# Security Notes:
# ==============================================
# 1. Generate strong passwords for all services
# 2. Use a secure encryption key (minimum 32 characters)
# 3. Change default usernames and passwords
# 4. Consider using Docker secrets for production
# 5. Regularly rotate passwords and keys
# 6. Ensure SSL certificates are properly configured
# ==============================================